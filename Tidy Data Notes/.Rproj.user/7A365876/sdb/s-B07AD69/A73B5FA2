{
    "collab_server" : "",
    "contents" : "---\noutput: html_document\n---\n**BIOSTATSTICS**\n\n**Why tidy data?**\n_**The tidy data concept:**_\n*provides a standardized layout/organization for data values.\n\n_**Standardized aids:**_\n* data exploration and analysis\n* data sharing\n* the develoopment of data cleaning and analysis tools\n\n**Core principles of tidy data**\n_**The language of datasets:**_\n* datasets consist of *values* (usually numbers or strings)\n* every _value_ belongs to a _variable_ and an _observation_\n\n_**Structure of a tidy dataset:**_\n* _variables_ are arranged in _columns_\n* _observations_ are arranged in _rows_\n* each type of observational unit forms a table\n\n**Common causes of messiness**\n* column headers are values, not variable names\n* multiple variables are stored in one column\n* variables are stored in both rows and columns\n* multiple types of experimental unit stored in the same table\n* on type of experimental unit stored in multiple tables\n\n_**Single document type is stored in multiple tables:**_\nData values about a single type of observational unit mau be spread out over multiple tables or files.  These tables and files are often split up by another variable (e.g., each table represents a singles year, person, or location).  As long as the format for individual records is consistent, this is an easy problem to fix by merging tables.\n\n**Tools to tidy and manipulate data**\n_**The _grammer_ of data cleaning**_\nPrimary _tidyr_ package verbs:\n* gather(): gathers multiple columns into key-value pair\n* spread(): spreads 2 columns (key-value pair) in to multiple columns\n\n**Tools to tidy and manipulate data**\n_**The grammmer of manipulating data**_\nPrimary _dplyr_ package verbs:\n* select(): focus on a subset of variables (columns)\nThis function has the inherent ability to arrange columns in any order I please.\n* filter(): focus on a subset of rows\n* mutate():add new columns\n* summarize(): produce summary statistics of variables\nThis function is most powerful when applied to **grouped data**. The main idea behind grouping data is that I want to break up my dataset into groups of rows based on the values of one or more variables. The *group_by()* function is responsible for doing this. \n* arrange(): re-order rows\n\n\n\n",
    "created" : 1466562635347.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1385617991",
    "id" : "A73B5FA2",
    "lastKnownWriteTime" : 1466562846,
    "last_content_update" : 1466562846929,
    "path" : "~/STATS STUFF/Practise/Lecture 2 Tidying data/Tidy Data Notes.md",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "markdown"
}